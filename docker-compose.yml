version: '3.7'

services:
  app:
    restart: always
    tty: true
    build:
      context: ./services/backend/
    container_name: app
    volumes:
      - ./services/backend/service/api:/home/appuser/project/api/
      - ./services/backend/service/apps:/home/appuser/project/apps/
      - ./services/backend/service/libs:/home/appuser/project/libs/
      - ./services/backend/service/media:/home/appuser/project/media/
      - ./services/backend/service/backend-static:/home/appuser/project/backend-static/
      - ./services/backend/service/settings:/home/appuser/project/settings/
    env_file:
      - ./services/backend/.env
    command: ['sh', '/home/appuser/project/local.entrypoint.sh']
    ports:
      - '8000:8000'
    depends_on:
      - pgdb

  pgdb:
    image: postgres:13.3-alpine
    container_name: postgres
    env_file:
      - ./services/postgres/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data

#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:5.5
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
#      PGADMIN_DEFAULT_PASSWORD: secret
#      PGADMIN_LISTEN_PORT: 80
#    ports:
#      - "8080:80"
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin
#
#  nginx:
#    image: nginx:1.17
#    restart: unless-stopped
#    build:
#      context: ./services/nginx/
#    ports:
#      - "80:80"
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  redis:
    image: redis
    restart: always
    container_name: redis

  worker-default:
    restart: always
    build:
      context: ./services/backend/
      dockerfile: Dockerfile
    container_name: worker-default
    env_file:
      - ./services/backend/.env
    command: [ 'celery', '--workdir=/home/appuser/project', '-A', 'settings', 'worker', '--pool=prefork', '--concurrency=1', '-l', 'INFO', '-Q', 'default', '-n', 'worker-default']
    depends_on:
      - app
      - pgdb

  beat:
    restart: always
    build:
      context: ./services/backend/
      dockerfile: Dockerfile
    container_name: beat
    env_file:
      - ./services/backend/.env
    command: [ 'celery', '-A', 'settings', 'beat']
    depends_on:
      - app
      - pgdb

  flower:
    image: mher/flower
    restart: always
    ports:
      - "5555:5555"
    container_name: flower
    command:
      [
        "celery",
        "--broker=redis://redis:6379",
        "flower",
        "--broker_api=redis://redis:6379",
        "--address=0.0.0.0",
        "--port=5555",
      ]
    depends_on:
      - app
      - pgdb


volumes:
  postgres_data:
  pgadmin-data:
